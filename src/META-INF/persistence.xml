<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
        version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
        <!-- Hibernate -->
    <persistence-unit name='hbsPersistenceUnit' transaction-type="RESOURCE_LOCAL">
        <!-- <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider> -->
        <provider>org.hibernate.ejb.HibernatePersistence</provider>
        <class>com.hbs.domain.service.ServiceCategory</class>
        <class>com.hbs.domain.service.ServiceItem</class>
        <class>com.hbs.domain.support.Province</class>
        <class>com.hbs.domain.service.provider.ServiceProvider</class>
        <class>com.hbs.domain.service.provider.AvailableService</class>
        <class>com.hbs.domain.service.provider.ProductPicture</class>
        <class>com.hbs.domain.support.City</class>
        <class>com.hbs.domain.support.District</class>
        <class>com.hbs.domain.support.LifeBusinessCircle</class>
        <class>com.hbs.domain.support.LifeBusinessCircleAssociation</class>
        <class>com.hbs.domain.service.consumer.Consumer</class>
        <class>com.hbs.domain.service.consumer.ServiceOrder</class>
        <class>com.hbs.domain.service.consumer.ServiceFavorite</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>        
        <properties>
            <!-- Change this to access your own database. -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/hbs" />
            <property name="javax.persistence.jdbc.user" value="root" />
            <property name="javax.persistence.jdbc.password" value="" />
            <!-- <property name="eclipselink.ddl-generation" value="create-tables" /> -->
            <!-- <property name="eclipselink.logging.level" value="ALL" /> -->
             <property name=" hibernate.show_sql " value="true"/>
        </properties>
    </persistence-unit>
    
    <!-- EclipseLink -->
    <persistence-unit name="RMSDatabase-eclipseLink" transaction-type="RESOURCE_LOCAL">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
        <class>org.rms.persistence.Restaurant</class>
        <class>org.rms.persistence.RestaurantMember</class>
        <class>org.rms.persistence.Order</class>
        <class>org.rms.persistence.OrderItem</class>
<!--         <class>org.rms.persistence.RestaurantEvent</class>
        <class>org.rms.persistence.MenuCategory</class>
        <class>org.rms.persistence.MenuItem</class>
        <class>org.rms.persistence.MenuItemPrice</class> -->
        <class>org.rms.persistence.Book</class>
        <properties>
            <!-- Change this to access your own database. -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/restaurant" />
            <property name="javax.persistence.jdbc.user" value="root" />
            <property name="javax.persistence.jdbc.password" value="" />
            <!-- <property name="eclipselink.ddl-generation" value="create-tables" /> -->
            <property name="eclipselink.logging.level" value="ALL" />
        </properties>
    </persistence-unit>
        
    
    <persistence-unit name="order" transaction-type="RESOURCE_LOCAL">
        <class>model.Order</class>
        <class>model.OrderLine</class>
        <class>model.Customer</class>
        <properties>
            <!-- Change this to access your own database. -->
            <property name="javax.persistence.jdbc.driver" value="oracle.jdbc.OracleDriver" />
            
        </properties>
    </persistence-unit>
    <persistence-unit name="order-opt" transaction-type="RESOURCE_LOCAL">
        <!--  Optimization #7, 8 - sequence preallocation, query result cache -->
        <mapping-file>META-INF/order-orm.xml</mapping-file>
        <class>model.Order</class>
        <class>model.OrderLine</class>
        <class>model.Customer</class>
        <properties>
            <!-- Change this to access your own database. -->
            <property name="javax.persistence.jdbc.driver" value="oracle.jdbc.OracleDriver" />
            <property name="javax.persistence.jdbc.url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
            <property name="javax.persistence.jdbc.user" value="scott" />
            <property name="javax.persistence.jdbc.password" value="tiger" />
            <property name="eclipselink.ddl-generation" value="create-tables" />
            <!--  Optimization #9 - statement caching -->
            <property name="eclipselink.jdbc.cache-statements" value="true" />
            <!--  Optimization #10 - batch writing -->
            <property name="eclipselink.jdbc.batch-writing" value="JDBC" />
            <property name="eclipselink.jdbc.batch-writing.size" value="1000" />
            <!--  Optimization #11 - disable caching for batch insert (caching only improves reads, so only adds overhead for inserts) -->
            <property name="eclipselink.cache.shared.default" value="false" />
            <!--  Except for Customer which is shared by orders -->
            <property name="eclipselink.cache.shared.Customer" value="true" />
            <!--  Optimization #12 - turn logging off -->
            <!-- property name="eclipselink.logging.level" value="FINE" /-->
            <property name="eclipselink.logging.level" value="off" />
            <!--  Optimization #13 - close EntityManager on commit, to avoid cost of resume -->
            <property name="eclipselink.persistence-context.close-on-commit" value="true" />
            <!--  Optimization #14 - avoid auto flush cost on query execution -->
            <property name="eclipselink.persistence-context.flush-mode" value="commit" />
            <!--  Optimization #15 - avoid cost of persist on commit -->
            <property name="eclipselink.persistence-context.persist-on-commit" value="true" />
        </properties>
    </persistence-unit>
</persistence>
